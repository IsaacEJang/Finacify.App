<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZ
        AHliBkCemAGQJ2YA5IkZAHliBkCemAGQJ2YA5IkZAHF/Wv0/jvETc4JeK/AAAAAASUVORK5CYII=
</value>
  </data>
</root>